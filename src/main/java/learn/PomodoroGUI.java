/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package learn;

import java.awt.Toolkit;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author clifford.k.roberson
 */
public class PomodoroGUI extends javax.swing.JFrame {

    Timer timer;
    int counter;
    /**
     * Creates new form PomodoroGUI
     */
    public PomodoroGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startPomodoroButton = new javax.swing.JButton();
        stopPomodoroButton = new javax.swing.JButton();
        timeLeftLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        currentTasksList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        waitingForList = new javax.swing.JList<>();
        nextTaskLabel = new javax.swing.JLabel();
        waitingForLabel = new javax.swing.JLabel();
        currentPomodoroLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        activityInventoryTable = new javax.swing.JTable();
        addTaskToActivityInventoryTextField = new javax.swing.JTextField();
        addTaskToActivityInventoryButton = new javax.swing.JButton();
        doneWithTaskButton = new javax.swing.JButton();
        moveCurrentTaskToWaitingForButton = new javax.swing.JButton();
        addTaskToNextButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pomodoro App");

        startPomodoroButton.setText("Start Pomodoro");
        startPomodoroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startPomodoroButtonActionPerformed(evt);
            }
        });

        stopPomodoroButton.setText("Stop Pomodoro");
        stopPomodoroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopPomodoroButtonActionPerformed(evt);
            }
        });

        timeLeftLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        timeLeftLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLeftLabel.setText("On Break");

        currentTasksList.setModel(new DefaultListModel());
        currentTasksList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(currentTasksList);

        waitingForList.setModel(new DefaultListModel());
        jScrollPane2.setViewportView(waitingForList);

        nextTaskLabel.setText("Current Tasks:");

        waitingForLabel.setText("Waiting For:");

        currentPomodoroLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        currentPomodoroLabel.setText("Current Pomodoro" + currentTasksList.getSelectedValue());

        activityInventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task", "Pomodoro", "Avg Pomodoros", "Total Pomodoros"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        activityInventoryTable.setEditingRow(1);
        activityInventoryTable.setOpaque(false);
        activityInventoryTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        activityInventoryTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(activityInventoryTable);

        addTaskToActivityInventoryTextField.setText("Some Task to Add...");
        addTaskToActivityInventoryTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addTaskToActivityInventoryTextFieldFocusGained(evt);
            }
        });

        addTaskToActivityInventoryButton.setText("Add Task To Activity Inventory");
        addTaskToActivityInventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTaskToActivityInventoryButtonActionPerformed(evt);
            }
        });

        doneWithTaskButton.setText("Done");

        moveCurrentTaskToWaitingForButton.setText("Waiting For");

        addTaskToNextButton.setText("Add Task To \"Current Tasks\"");
        addTaskToNextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTaskToNextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addTaskToActivityInventoryTextField)
                                    .addComponent(addTaskToActivityInventoryButton)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(doneWithTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(moveCurrentTaskToWaitingForButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(timeLeftLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nextTaskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(startPomodoroButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stopPomodoroButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(230, 230, 230)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(waitingForLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(currentPomodoroLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addTaskToNextButton)
                        .addGap(164, 164, 164))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentPomodoroLabel)
                    .addComponent(addTaskToNextButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(waitingForLabel)
                                .addComponent(nextTaskLabel))
                            .addComponent(moveCurrentTaskToWaitingForButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(doneWithTaskButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addTaskToActivityInventoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addTaskToActivityInventoryButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(timeLeftLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startPomodoroButton)
                            .addComponent(stopPomodoroButton))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startPomodoroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startPomodoroButtonActionPerformed

        ActionListener taskPerformer = new ActionListener(){
            int counter = 1501;
            public void actionPerformed(ActionEvent evt)
            {
                counter--;

                if(counter >= 1)
                {
                    String seconds = String.format("%02d" , counter % 60);
                    timeLeftLabel.setText("Time left: " + (counter / 60) + ":" + seconds );
                }
                else
                {
                    timer.stop();
                    timeLeftLabel.setText("Done!");
                    Toolkit.getDefaultToolkit().beep();
                }
            }
        };
        
        timer = new Timer(1000, taskPerformer);
        timer.setInitialDelay(0);
        timer.start();
    }//GEN-LAST:event_startPomodoroButtonActionPerformed

    private void stopPomodoroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopPomodoroButtonActionPerformed
        timer.stop();
        timeLeftLabel.setText("Pomodoro Canceleds");
    }//GEN-LAST:event_stopPomodoroButtonActionPerformed

    private void addTaskToActivityInventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTaskToActivityInventoryButtonActionPerformed
      
        String rowToAdd = addTaskToActivityInventoryTextField.getText();
        if (!rowToAdd.equals(""))
        {
            DefaultTableModel model = (DefaultTableModel)activityInventoryTable.getModel();
            model.addRow(new Object[]{addTaskToActivityInventoryTextField.getText(), 0, 0,0});
        }       
    }//GEN-LAST:event_addTaskToActivityInventoryButtonActionPerformed

    private void addTaskToActivityInventoryTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addTaskToActivityInventoryTextFieldFocusGained
        addTaskToActivityInventoryTextField.setText("");
    }//GEN-LAST:event_addTaskToActivityInventoryTextFieldFocusGained

    private void addTaskToNextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTaskToNextButtonActionPerformed
        
        DefaultListModel<String> listModel = (DefaultListModel)currentTasksList.getModel();
        
        int taskToAddRow = activityInventoryTable.getSelectedRow();
        String taskToAdd = activityInventoryTable.getModel().getValueAt(taskToAddRow, 0).toString();
        
        
        
        listModel.add(taskToAddRow, taskToAdd);
             
        currentTasksList.setModel(listModel);
        
    }//GEN-LAST:event_addTaskToNextButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PomodoroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PomodoroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PomodoroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PomodoroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PomodoroGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable activityInventoryTable;
    private javax.swing.JButton addTaskToActivityInventoryButton;
    private javax.swing.JTextField addTaskToActivityInventoryTextField;
    private javax.swing.JButton addTaskToNextButton;
    private javax.swing.JLabel currentPomodoroLabel;
    private javax.swing.JList<String> currentTasksList;
    private javax.swing.JButton doneWithTaskButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton moveCurrentTaskToWaitingForButton;
    private javax.swing.JLabel nextTaskLabel;
    private javax.swing.JButton startPomodoroButton;
    private javax.swing.JButton stopPomodoroButton;
    private javax.swing.JLabel timeLeftLabel;
    private javax.swing.JLabel waitingForLabel;
    private javax.swing.JList<String> waitingForList;
    // End of variables declaration//GEN-END:variables
}
